filter {
 if [type] == "nginx-access" or ([type] == "access" and [application] == "nginx") {
   grok {
      patterns_dir => '/cusdata/patterns'
      match => { "message" => "%{NGINXACCESS}" }
   }
   date {
     match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
     remove_field => [ "timestamp" ]
   }
   geoip {
     source => "clientip"
   }
 }

if [type] == "unicorn" {
  grok {
    patterns_dir => '/cusdata/patterns'
    match => { "message" => "%{UNICORN_MESSAGE}" }
  }
  date {
    match => [ "timestamp", "YYYY-MM-dd'T'HH:mm:ss.SSSSSS",  "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZ"]
     remove_field => [ "timestamp" ]
  }
}
if [application] == "grape" {
  grok {
    patterns_dir => '/cusdata/patterns'
    match => { "message" => "%{GRAPE_API}" }
  }
  date {
    match => [ "timestamp", "MM/dd HH:mm:ss", "YYYY-MM-dd'T'HH:mm:ss.SSSSSS", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZ", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZZ" ]
   remove_field => [ "timestamp" ]
  }
}

 if [type] == "cron" and [application] == "alerts" {
   grok {
      patterns_dir => '/cusdata/patterns'
      match => { "message" => "%{GRAPE_API}" }
   }
   date {
     match => [ "timestamp" , "MM/dd HH:mm:ss", "YYYY-MM-dd'T'HH:mm:ss.SSSSSS", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZ", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZZ" ]
     remove_field => [ "timestamp" ]
   }
 }

 if [type] == "cron" {
   grok {
      patterns_dir => '/cusdata/patterns'
      match => { "message" => "%{GRAPE_API_ALERTS}" }
   }
   date {
     match => [ "timestamp" , "MM/dd HH:mm:ss", "YYYY-MM-dd'T'HH:mm:ss.SSSSSS", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZ", "YYYY-MM-dd'T'HH:mm:ss.SSSSSSZZ" ]
     remove_field => [ "timestamp" ] 
  }
 }

 if [type] == "mail" {
   grok {
      patterns_dir => '/cusdata/patterns'
      match => { "message" => "%{POSTFIX_MAILLOG}" }
   }
   date {
     match => [ "timestamp" , "MMM dd HH:mm:ss",
          "MMM  d HH:mm:ss" ]
     remove_field => [ "timestamp" ]
  }
 }

if [type] == "sidekiq" {
  multiline {
    pattern => "^[^-]* --.*"
    what => "previous"
  }
  multiline {
    pattern => "^/.*"
    what => "previous"
  }
  grok {
    patterns_dir => ["/cusdata/patterns"]
    match => ["message","%{SIDEKIQ_JOB_LOG}|%{SIDEKIQ_LOG_ENTRY}"]
  }
  date {
    match => [ "timestamp", "ISO8601" ]
    remove_field => [ "timestamp" ]
  }
}
 
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
     remove_field => [ "timestamp" ]
    }
  }
  
  if ! [@metadata][beat] {
        mutate { add_field => { "[@metadata][index]" => "logstash" } }
  } else {
        mutate { add_field => { "[@metadata][index]" => "%{[@metadata][beat]}" }}
  }
}
